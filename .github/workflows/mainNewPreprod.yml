name: Run Automated Tests

on:
  workflow_dispatch:
    inputs:
      test_tag:
        description: 'Test tag to run (leave empty to run all tests)'
        required: false
        default: 'short_test'
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  test:
    runs-on: ubuntu-latest
    if: github.event_name == 'workflow_dispatch' || (github.event_name == 'push' && github.event.pull_request == null)

    steps:
    - uses: actions/checkout@v3

    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.13'

    - name: Debug information
      run: |
        echo "Current directory: $(pwd)"
        echo "Directory contents: $(ls -la)"
        echo "Python version: $(python --version)"
        echo "Event name: ${{ github.event_name }}"
        echo "test_tag: ${{ github.test_tag }}"

    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt
        pip install selenium webdriver-manager allure-pytest  # –£–±–µ–¥–∏—Ç–µ—Å—å, —á—Ç–æ allure-pytest —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω
        echo "Installed packages: ${{ github.event_name }}"
        pip list

    - name: Install Chrome
      run: |
        sudo apt-get update
        sudo apt-get install -y chromium-browser
        echo "Chrome version: $(chromium-browser --version)"

    - name: Run tests
      env:
        CI: true
        HEADLESS: true
      run: |
        echo "${{ github.event.inputs.test_tag }}"
        # –î–æ–±–∞–≤–ª—è–µ–º –ø–∞—Ä–∞–º–µ—Ç—Ä --alluredir –¥–ª—è —É–∫–∞–∑–∞–Ω–∏—è –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏–∏ –¥–ª—è —Ä–µ–∑—É–ª—å—Ç–∞—Ç–æ–≤ Allure
        pytest -v -m "${{ github.event.inputs.test_tag }}" --headless --tb=long --full-trace --capture=tee-sys --alluredir=allure-results | tee test_output.log || true

    - name: Check allure-results directory  # –ü—Ä–æ–≤–µ—Ä—è–µ–º —Å–æ–¥–µ—Ä–∂–∏–º–æ–µ –ø–∞–ø–∫–∏ allure-results
      run: |
        echo "Contents of allure-results:"
        ls -la allure-results

    - name: Generate Allure Report
      uses: simple-elf/allure-report-action@master
      if: always()
      with:
        allure_results: allure-results  # –ü—É—Ç—å –∫ —Ä–µ–∑—É–ª—å—Ç–∞—Ç–∞–º Allure
        allure_history: allure-history  # –ü—É—Ç—å –∫ –∏—Å—Ç–æ—Ä–∏–∏ Allure (–µ—Å–ª–∏ –∏—Å–ø–æ–ª—å–∑—É–µ—Ç—Å—è)
        keep_reports: 20

    - name: Store test results
      if: always()
      uses: actions/upload-artifact@v4
      with:
        name: test-results
        path: |
          test-results/
          allure-results/
          test_output.log  # –õ–æ–≥ –≤—ã–ø–æ–ª–Ω–µ–Ω–∏—è —Ç–µ—Å—Ç–æ–≤ –¥–ª—è –∞–Ω–∞–ª–∏–∑–∞ –æ—à–∏–±–æ–∫, –µ—Å–ª–∏ –æ–Ω–∏ –µ—Å—Ç—å.
        retention-days: 30

    - name: Store Allure Report
      uses: actions/upload-artifact@v4
      if: always()
      with:
        name: allure-report
        path: allure-report/  # –ü—É—Ç—å –∫ —Å–≥–µ–Ω–µ—Ä–∏—Ä–æ–≤–∞–Ω–Ω–æ–º—É –æ—Ç—á–µ—Ç—É Allure.
        retention-days: 30

    - name: Deploy to GitHub Pages
      uses: peaceiris/actions-gh-pages@v3
      if: github.ref == 'refs/heads/main'
      with:
        github_token: ${{ secrets.MY_GITHUB_TOKEN }}
        publish_dir: ./allure-report  # –î–∏—Ä–µ–∫—Ç–æ—Ä–∏—è –¥–ª—è –ø—É–±–ª–∏–∫–∞—Ü–∏–∏ –æ—Ç—á–µ—Ç–∞ –Ω–∞ GitHub Pages.

    - name: Send Telegram Notification
      if: always()
      uses: appleboy/telegram-action@master
      with:
        to: ${{ secrets.TELEGRAM_CHAT_ID }}
        token: ${{ secrets.TELEGRAM_TOKEN }}
        message: |
          ü§ñ Test Execution Report

          Repository: ${{ github.repository }}
          Branch: ${{ github.ref_name }}

          Status: ${{ job.status }}

          Commit Message: ${{ github.event.head_commit.message }}

          Test Results URL : ${{ github.server_url }}/${{ github.repository }}/actions/runs/${{ github.run_id }}

          ${{ job.status == 'success' && ' All tests passed!' || ' Some tests failed!' }}

          Allure Report URL : https://achernecova.github.io/godevPreprod/

          Triggered by : ${{ github.actor }}

          Time : ${{ github.event.head_commit.timestamp }}